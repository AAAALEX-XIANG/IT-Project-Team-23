{"version":3,"sources":["asserts/empty.png","components/header.js","components/Navbar.js","containers/profileApi.js","containers/Dashboard/index.js","containers/artifactApi.js","containers/Setting/index.js","containers/categoryApi.js","containers/Article/index.js","containers/accountApi.js","components/login.js","containers/loginPage.js","components/register.js","containers/regPage.js","containers/DupLogin/index.js","containers/AdminPage/index.js","App.js","serviceWorker.js","userData.js","index.js"],"names":["module","exports","header","className","src","logo","alt","localStorage","getItem","Navbar","to","activeClassName","onClick","actionURL","fetch","method","clear","window","location","replace","BASE_URL","request","a","email","firstname","lastname","username","description","formData","FormData","append","body","res","console","log","error","status","json","baseURL","beforeUpload","file","isJpgOrPng","type","message","isLt1M","size","Dashboard","props","handleChange","info","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","setState","loading","changeEdit","ifEdit","enterLoading","index","loadings","newLoadings","setTimeout","state","userInfo","isLoaded","bind","handleUpdate","submitProfile","event","target","value","name","this","detail","length","alert","updateProfile","then","viewProfile","setImage","avatar","prevUrl","image","data","imageType","fetchInfo","uploadButton","LoadingOutlined","PlusOutlined","style","marginTop","listType","showUploadList","action","onChange","width","height","block","required","rows","cols","class","Component","category","title","attachment","privacy","getAttachment","artifact","headers","JSON","stringify","Panel","Collapse","Setting","showAllCate","getCategoryArtifact","files","downloadAttachment","downloadFile","b64","content","foo","document","getElementsByClassName","hasChildNodes","children","childNodes","i","nodeName","removeChild","link","createElement","cssFloat","download","filename","href","appendChild","click","filetype","firstobj","item","viewFile","cates","categories","Map","cate","push","artifacts","set","map","key","get","slice","viewAttachment","id","shape","icon","PictureOutlined","DownloadOutlined","categoryName","Option","Select","Dragger","Upload","formItemLayout","labelCol","span","wrapperCol","multiple","fileList","success","Article","loadAllcates","showCategory","items","onNameChange","onCategoryChange","onTitleChange","onDescriptionChange","onPrivacyChange","addItem","addCategory","uploadFiles","myFile","upload","isUpdating","Item","label","placeholder","flex","dropdownRender","menu","margin","display","flexWrap","padding","Group","InboxOutlined","offset","login","userDetails","password","endpoint","requestBody","user","register","first_name","last_name","studentId","emailaddress","LoginForm","wrongAttempt","handleSubmit","preventDefault","userStore","isLoggedIn","setItem","history","onSubmit","React","withRouter","Loginpage","RegForm","password_confirm","RegPage","DupLogin","Search","Input","onSearch","enterButton","App","observer","storedUsername","exact","path","render","Boolean","hostname","match","UserStore","autorun","report","decorate","observable","computed","ReactDOM","Fragment","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8120bbcf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/empty.8d3e0a89.png\";","import React from \"react\";\nimport logo from \"../asserts/empty.png\";\n\nexport default function header() {\n  return (\n    <header className=\"mainHeader\">\n      <div className=\"headerContainer\">\n        <div className=\"logoContainer\">\n          <img src={logo} className=\"logo\" alt=\"logo\" />\n        </div>\n        <div className=\"messageContainer\">Welcome to Fate e-portfolio</div>\n        <div className=\"userMsg\">Hello {localStorage.getItem(\"email\")} !</div>\n      </div>\n    </header>\n  );\n}\n","import React from \"react\";\n\nimport { NavLink } from \"react-router-dom\";\n\nlet clearURL = \"https://fatewhole.herokuapp.com/api/cache/clear/\";\nexport default function Navbar() {\n  const logout = () => {\n    // eslint-disable-next-line no-useless-concat\n    const actionURL = clearURL + `${localStorage.getItem(\"email\")}`;\n    fetch(actionURL, {\n      method: \"GET\",\n    });\n    localStorage.clear();\n    window.location.replace(\"/login\");\n  };\n  return (\n    <nav className=\"navbar\">\n      <ul>\n        <li className=\"navOption\">\n          <NavLink\n            to=\"/admin/dashboard\"\n            className=\"current-page\"\n            activeClassName=\"selected\"\n          >\n            {\" \"}\n            Home{\" \"}\n          </NavLink>\n        </li>\n        <li className=\"navOption\">\n          <NavLink\n            to=\"/admin/article\"\n            className=\"current-page\"\n            activeClassName=\"selected\"\n          >\n            {\" \"}\n            Artifact{\" \"}\n          </NavLink>\n        </li>\n        <li className=\"navOption\">\n          <NavLink\n            to=\"/admin/category\"\n            className=\"current-page\"\n            activeClassName=\"selected\"\n          >\n            {\" \"}\n            Category{\" \"}\n          </NavLink>\n        </li>\n        <li className=\"navOption\">\n          <NavLink to=\"/login\" onClick={logout}>\n            {\" \"}\n            Logout{\" \"}\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","const BASE_URL = \"https://fatewhole.herokuapp.com/api/profile\";\r\n\r\nexport async function updateProfile(request) {\r\n  const { email, firstname, lastname, username, description } = request;\r\n  let formData = new FormData();\r\n  formData.append(\"email\", email);\r\n  formData.append(\"firstname\", firstname);\r\n  formData.append(\"lastname\", lastname);\r\n  formData.append(\"username\", username);\r\n  formData.append(\"description\", description);\r\n\r\n  const endpoint = BASE_URL + `/updateProfile`;\r\n\r\n  //fetch from server api\r\n  let res;\r\n  try {\r\n    res = await fetch(endpoint, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    return { error: e };\r\n  }\r\n\r\n  //sample res:{\"res\" : true}\r\n  return { status: await res.status, res: await res.json() };\r\n}\r\n\r\nexport async function viewProfile(request) {\r\n  const { email } = request;\r\n  const endpoint = BASE_URL + `/viewprofile`;\r\n  let formData = new FormData();\r\n  formData.append(\"email\", email);\r\n\r\n  //fetch from server api\r\n  let res;\r\n  try {\r\n    res = await fetch(endpoint, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    return { error: e };\r\n  }\r\n\r\n  return { status: await res.status, res: await res.json() };\r\n}\r\n","import React, { Component } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport { Button, Upload, message } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { viewProfile, updateProfile } from \"../profileApi\";\n\nlet baseURL = \"https://fatewhole.herokuapp.com/api/profile/updateAvatar\";\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n  const isLt1M = file.size / 1024 / 1024 < 1;\n  if (!isLt1M) {\n    message.error(\"Image must smaller than 1MB!\");\n  }\n  return isJpgOrPng && isLt1M;\n}\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userInfo: null,\n      username: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      description: \"\",\n      isLoaded: false,\n      error: null,\n      loading: false,\n      imageUrl: null,\n      ifEdit: false,\n      status: false,\n      loadings: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.changeEdit = this.changeEdit.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.submitProfile = this.submitProfile.bind(this);\n  }\n\n  handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) =>\n        this.setState({\n          imageUrl: imageUrl,\n          loading: false,\n        })\n      );\n      console.log(\"done!\");\n    }\n  };\n\n  handleUpdate(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  submitProfile(detail) {\n    const { firstname, lastname, username, description } = detail;\n    this.enterLoading(0);\n    if (\n      firstname.length === 0 ||\n      lastname.length === 0 ||\n      username.length === 0\n    ) {\n      alert(\"name cannot be empty\");\n    } else {\n      updateProfile({\n        email: localStorage.getItem(\"email\"),\n        firstname: firstname,\n        lastname: lastname,\n        username: username,\n        description: description,\n      }).then((status) =>\n        this.setState({\n          status: status.res.result,\n        })\n      );\n    }\n  }\n\n  fetchInfo(email) {\n    viewProfile({ email: email }).then((userInfo) =>\n      this.setState({\n        userInfo: userInfo,\n        isLoaded: true,\n        username: userInfo.res.username,\n        loading: false,\n        firstname: userInfo.res.firstname,\n        lastname: userInfo.res.lastname,\n        description: userInfo.res.description,\n        imageUrl: this.setImage(userInfo.res.avatar),\n      })\n    );\n  }\n\n  setImage(avatar) {\n    if (avatar !== null) {\n      var prevUrl = avatar.image.data;\n      return \"data:\" + avatar.imageType + \";base64,\" + prevUrl;\n    }\n    return null;\n  }\n\n  changeEdit = () => {\n    this.setState({\n      ifEdit: true,\n    });\n  };\n\n  componentDidMount() {\n    this.fetchInfo(localStorage.getItem(\"email\"));\n  }\n\n  //the loading button is referenced from https://ant.design/components/button-cn/\n  enterLoading = (index) => {\n    this.setState(({ loadings }) => {\n      const newLoadings = [...loadings];\n      newLoadings[index] = true;\n\n      return {\n        loadings: newLoadings,\n      };\n    });\n    setTimeout(() => {\n      this.setState(({ loadings }) => {\n        const newLoadings = [...loadings];\n        newLoadings[index] = false;\n\n        return {\n          loadings: newLoadings,\n        };\n      });\n    }, 12000);\n  };\n\n  render() {\n    const {\n      isLoaded,\n      firstname,\n      lastname,\n      username,\n      description,\n      error,\n      loading,\n      imageUrl,\n      ifEdit,\n      loadings,\n    } = this.state;\n    if (this.state.status === true) {\n      window.location.replace(\"/admin/dashboard\");\n      // console.log(\"refresh\");\n    }\n    if (error) {\n      //couldn't fetch data from server\n      return (\n        <div className=\"pageContainer\">\n          <Navbar />\n          <p className=\"message\">\n            Something went wrong. Error: {error.message}\n          </p>\n          ;\n        </div>\n      );\n    } else if (!isLoaded) {\n      //loading screen\n      return (\n        <div className=\"pageContainer\">\n          <Navbar />\n          <div className=\"loadingContainer\">\n            <div class=\"loading\">\n              <div class=\"loading-item loading-one\"></div>\n              <div class=\"loading-item loading-two\"></div>\n              <div class=\"loading-item loading-three\"></div>\n              <div class=\"loading-item loading-four\"></div>\n              <div class=\"loading-item loading-five\"></div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      const uploadButton = (\n        <div>\n          {loading ? <LoadingOutlined /> : <PlusOutlined />}\n          <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n      );\n      if (ifEdit) {\n        return (\n          <div className=\"pageContainer\">\n            <Navbar />\n            <div className=\"grid-container\">\n              <div className=\"leftCol\">\n                <div className=\"avatarBox\">\n                  <Upload\n                    name=\"image\"\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    showUploadList={false}\n                    action={baseURL + `/${localStorage.getItem(\"email\")}`}\n                    beforeUpload={beforeUpload}\n                    onChange={this.handleChange}\n                  >\n                    {imageUrl ? (\n                      <img\n                        src={imageUrl}\n                        alt=\"avatar\"\n                        style={{ width: \"200%\", height: \"200%\" }}\n                      />\n                    ) : (\n                      uploadButton\n                    )}\n                  </Upload>\n                </div>\n\n                <br />\n                <br />\n                <div className=\"editButtonBox\">\n                  <Button block onClick={this.changeEdit}>\n                    Edit Profile\n                  </Button>\n                  <br />\n                  <br />\n                </div>\n              </div>\n              <div className=\"rightCol\">\n                <div className=\"profileHeadings\">My Account</div>\n\n                <div className=\"profileInfo\">\n                  Email:\n                  <div className=\"currentInfo\">\n                    {localStorage.getItem(\"email\")}\n                  </div>\n                </div>\n\n                <div className=\"profileInfo\">\n                  Username:\n                  <div className=\"currentInfo\">\n                    <input\n                      type=\"text\"\n                      name=\"username\"\n                      value={this.state.username}\n                      onChange={this.handleUpdate}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"nameInfo\">\n                  <div className=\"profileInfo\">\n                    First name:\n                    <div className=\"currentInfo\">\n                      <input\n                        type=\"text\"\n                        name=\"firstname\"\n                        value={this.state.firstname}\n                        onChange={this.handleUpdate}\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"profileInfo\">\n                    Last name:\n                    <div className=\"currentInfo\">\n                      <input\n                        type=\"text\"\n                        name=\"lastname\"\n                        value={this.state.lastname}\n                        onChange={this.handleUpdate}\n                        required\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"profileInfo\">\n                  Self Introduction:\n                  <div className=\"currentInfo\">\n                    <textarea\n                      type=\"text\"\n                      name=\"description\"\n                      rows=\"4\"\n                      cols=\"50\"\n                      value={this.state.description}\n                      onChange={this.handleUpdate}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"profileInfo\">\n                  <div className=\"updateButtonBox\">\n                    <Button\n                      value=\"default\"\n                      loading={loadings[0]}\n                      onClick={() =>\n                        this.submitProfile({\n                          firstname,\n                          lastname,\n                          username,\n                          description,\n                        })\n                      }\n                    >\n                      Update\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"pageContainer\">\n            <Navbar />\n            <div className=\"grid-container\">\n              <div className=\"leftCol\">\n                <div className=\"avatarBox\">\n                  <Upload\n                    name=\"image\"\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    showUploadList={false}\n                    action={baseURL + `/${localStorage.getItem(\"email\")}`}\n                    beforeUpload={beforeUpload}\n                    onChange={this.handleChange}\n                  >\n                    {imageUrl ? (\n                      <img\n                        src={imageUrl}\n                        alt=\"avatar\"\n                        style={{ width: \"200%\", height: \"200%\" }}\n                      />\n                    ) : (\n                      uploadButton\n                    )}\n                  </Upload>\n                </div>\n\n                <br />\n                <br />\n                <div className=\"editButtonBox\">\n                  <Button block onClick={this.changeEdit}>\n                    Edit Profile\n                  </Button>\n                  <br />\n                  <br />\n                </div>\n              </div>\n              <div className=\"rightCol\">\n                <div className=\"profileHeadings\">My Account</div>\n\n                <div className=\"profileInfo\">\n                  Email:\n                  <div className=\"currentInfo\">\n                    {localStorage.getItem(\"email\")}\n                  </div>\n                </div>\n\n                <div className=\"profileInfo\">\n                  Username:\n                  <div className=\"currentInfo\">{this.state.username}</div>\n                </div>\n                <div className=\"nameInfo\">\n                  <div className=\"profileInfo\">\n                    First name:\n                    <div className=\"currentInfo\">{this.state.firstname}</div>\n                  </div>\n\n                  <div className=\"profileInfo\">\n                    Last name:\n                    <div className=\"currentInfo\">{this.state.lastname}</div>\n                  </div>\n                </div>\n                <div className=\"profileInfo\">\n                  Self Introduction:\n                  <div className=\"currentInfo\">{this.state.description}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\n  }\n}\n","const BASE_URL = \"https://fatewhole.herokuapp.com/api/artifacts\";\n\nexport async function upload(request) {\n  const { email, category, title, description, attachment, privacy } = request;\n  let formData = new FormData();\n  formData.append(\"email\", email);\n  formData.append(\"category\", category);\n  formData.append(\"title\", title);\n  formData.append(\"description\", description);\n  formData.append(\"attachment\", attachment);\n  formData.append(\"privacy\", privacy);\n  const endpoint = BASE_URL + `/upload`;\n\n  //fetch from server api\n  let res;\n  try {\n    res = await fetch(endpoint, {\n      method: \"POST\",\n      body: formData,\n    });\n  } catch (e) {\n    console.log(e);\n    return { error: e };\n  }\n  // console.log(await res);\n  //sample res:{\"res\" : true}\n  return { status: await res.status, res: await res.json() };\n}\n\nexport async function viewArtifact(request) {\n  const { email, category, title } = request;\n  const endpoint = BASE_URL + `/view-artifact`;\n\n  //fetch from server api\n  let res;\n  try {\n    res = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        category: category,\n        artifact: title,\n      }),\n    });\n  } catch (e) {\n    console.log(e);\n    return { error: e };\n  }\n  // console.log(await res);\n  //sample res:{\"title\" : Worked at google,\"Description\" : \"....\", \"Attachment\" : \"fileName.pdf\"}\n  return { status: await res.status, res: await res.json() };\n}\n\nexport async function deleteArtifact(request) {\n  const { email, category, title } = request;\n  const endpoint = BASE_URL + `/delete-artifact`;\n\n  //fetch from server api\n  let res;\n  try {\n    res = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        category: category,\n        artifact: title,\n      }),\n    });\n  } catch (e) {\n    console.log(e);\n    return { error: e };\n  }\n  // console.log(await res);\n  //sample res:{\"res\" : \"true\"}\n  return { status: await res.status, res: await res.json() };\n}\n\nexport async function getAttachment(request) {\n  const { email, category, artifact, attachment } = request;\n  const endpoint = BASE_URL + `/get-attachment`;\n\n  //fetch from server api\n  let res;\n  try {\n    res = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        category: category,\n        artifact: artifact,\n        attachment: attachment,\n      }),\n    });\n  } catch (e) {\n    console.log(e);\n    return { error: e };\n  }\n  console.log(await res);\n  //sample res:{\"filename\" : \"aaa\",\"content\": \"Base64\", \"filetype\" : \"application/pdf\", \"size\": \"15640\"}\n  return { status: await res.status, res: await res.json() };\n}\n\nexport async function getCategoryArtifact(request) {\n  const { email } = request;\n  const endpoint = BASE_URL + `/show-Category-Artifact-Attachment`;\n\n  //fetch from server api\n  let res;\n  try {\n    res = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n      }),\n    });\n  } catch (e) {\n    console.log(e);\n    return { error: e };\n  }\n  console.log(await res);\n  return { status: await res.status, res: await res.json() };\n}\n","import React, { Component } from \"react\";\nimport { Button, Collapse } from \"antd\";\nimport { DownloadOutlined, PictureOutlined } from \"@ant-design/icons\";\n//import { showCategory, deleteCategory, showArtifacts } from \"../../containers/categoryApi\"\nimport {\n  getCategoryArtifact,\n  getAttachment,\n} from \"../../containers/artifactApi\";\n\nimport Navbar from \"../../components/Navbar\";\n\nconst { Panel } = Collapse;\n\nexport default class Setting extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: {},\n      loadings: [],\n      isLoaded: false,\n    };\n    this.showAllCate = this.showAllCate.bind(this);\n    this.downloadAttachment = this.downloadAttachment.bind(this);\n    this.downloadFile = this.downloadFile.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      files: {},\n    });\n    console.log(\"clear\");\n  }\n  componentDidMount() {\n    this.showAllCate();\n    console.log(\"loading\");\n  }\n\n  showAllCate = () => {\n    getCategoryArtifact({ email: localStorage.getItem(\"email\") }).then(\n      (files) =>\n        // console.log(files.res)\n        this.setState({\n          files: files.res,\n          isLoaded: true,\n        })\n    );\n  };\n\n  downloadFile(request) {\n    // Decode Base64 to binary and show some information about the file\n    var b64 = request.content;\n    // var type = request.filetype;\n    let foo = document.getElementsByClassName(\"pageContainer\")[0];\n    if (foo.hasChildNodes()) {\n      let children = foo.childNodes;\n      for (let i = 0; i < children.length; i++) {\n        console.log(children[i].nodeName);\n        if (children[i].nodeName === \"OBJECT\") {\n          foo.removeChild(children[i]);\n        }\n        // if(children[i].nodeName === 'A'){\n        //     foo.removeChild(children[i]);\n        //     break;\n        // }\n      }\n      // Insert a link that allows the user to download the PDF file\n      var link = document.createElement(\"a\");\n      link.style.cssFloat = \"right\";\n      //link.innerHTML = 'Download file';\n      link.download = request.filename;\n      link.href = \"data:application/octet-stream;base64,\" + b64;\n      foo.appendChild(link).click();\n    }\n    this.setState({\n      loadings: [],\n    });\n  }\n\n  viewFile(request) {\n    // Decode Base64 to binary and show some information about the file\n    var b64 = request.content;\n    var type = request.filetype;\n    let foo = document.getElementsByClassName(\"pageContainer\")[0];\n    if (foo.hasChildNodes()) {\n      let children = foo.childNodes;\n      for (let i = 0; i < children.length; i++) {\n        console.log(children[i].nodeName);\n        if (children[i].nodeName === \"OBJECT\") {\n          foo.removeChild(children[i]);\n        } else if (children[i].nodeName === \"A\") {\n          foo.removeChild(children[i]);\n          break;\n        }\n      }\n\n      // we can only view pdf, text or image files\n      if (\n        type === \"application/pdf\" ||\n        type === \"image/jpeg\" ||\n        type === \"text/plain\"\n      ) {\n        // view file\n        var firstobj = document.createElement(\"object\");\n        firstobj.class = \"viewContainer\";\n        if (type === \"application/pdf\" || type === \"text/plain\") {\n          firstobj.style.height = \"700px\";\n        } else {\n          firstobj.style.height = \"45%\";\n        }\n        firstobj.style.width = \"60%\";\n        firstobj.style.cssFloat = \"right\";\n        firstobj.type = type;\n        firstobj.data = \"data:\" + type + \";base64,\" + b64;\n        foo.appendChild(firstobj);\n      } else {\n        alert(`Sorry, you are not allowed to view ${type} files`);\n      }\n      this.setState({\n        loadings: [],\n      });\n    }\n  }\n\n  downloadAttachment(item) {\n    getAttachment(item).then((file) => this.downloadFile(file.res));\n    this.enterLoading(1);\n  }\n  viewAttachment(item) {\n    getAttachment(item).then((file) => this.viewFile(file.res));\n    this.enterLoading(0);\n  }\n\n  enterLoading = (index) => {\n    this.setState(({ loadings }) => {\n      const newLoadings = [...loadings];\n      newLoadings[index] = true;\n\n      return {\n        loadings: newLoadings,\n      };\n    });\n    setTimeout(() => {\n      this.setState(({ loadings }) => {\n        const newLoadings = [...loadings];\n        newLoadings[index] = false;\n\n        return {\n          loadings: newLoadings,\n        };\n      });\n    }, 50000);\n  };\n\n  render() {\n    const { files, loadings, isLoaded } = this.state;\n    let cates = [];\n    let categories = new Map();\n\n    for (var cate in files) {\n      cates.push(cate);\n      let artifacts = [];\n      for (var title in files[cate]) {\n        artifacts.push(title);\n      }\n      categories.set(cate, artifacts);\n    }\n    if (!isLoaded) {\n      //loading screen\n      return (\n        <div className=\"pageContainer\">\n          <Navbar />\n          <div className=\"loadingContainer\">\n            <div class=\"loading\">\n              <div class=\"loading-item loading-one\"></div>\n              <div class=\"loading-item loading-two\"></div>\n              <div class=\"loading-item loading-three\"></div>\n              <div class=\"loading-item loading-four\"></div>\n              <div class=\"loading-item loading-five\"></div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"pageContainer\">\n          <Navbar />\n\n          <Collapse>\n            {cates.map((item) => (\n              <Panel header={item} key={item}>\n                <Collapse>\n                  {categories.get(item).map((title) => (\n                    <Panel header={title} key={title}>\n                      Description:\n                      <p>{files[item][title][0]}</p>\n                      Attachments:\n                      {files[item][title].slice(2).map((file) => (\n                        <div key={file}>\n                          <p>\n                            {file}\n\n                            <Button\n                              loading={loadings[0]}\n                              onClick={() =>\n                                this.viewAttachment({\n                                  email: localStorage.getItem(\"email\"),\n                                  category: item,\n                                  artifact: title,\n                                  attachment: file,\n                                })\n                              }\n                              id=\"downloadBtn\"\n                              type=\"primary\"\n                              shape=\"round\"\n                              icon={<PictureOutlined />}\n                            >\n                              View\n                            </Button>\n                            <Button\n                              loading={loadings[1]}\n                              onClick={() =>\n                                this.downloadAttachment({\n                                  email: localStorage.getItem(\"email\"),\n                                  category: item,\n                                  artifact: title,\n                                  attachment: file,\n                                })\n                              }\n                              id=\"downloadBtn\"\n                              type=\"primary\"\n                              shape=\"round\"\n                              icon={<DownloadOutlined />}\n                            >\n                              download\n                            </Button>\n                          </p>\n                        </div>\n                      ))}\n                    </Panel>\n                  ))}\n                </Collapse>\n              </Panel>\n            ))}\n          </Collapse>\n        </div>\n      );\n    }\n  }\n}\n","const BASE_URL = \"https://fatewhole.herokuapp.com/api/categories\";\n\nexport async function addCategory(request) {\n  const { email, categoryName } = request;\n  const endpoint = BASE_URL + `/addCategory`;\n\n  //fetch from server api\n  let res;\n  try {\n    res = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        categoryName: categoryName,\n      }),\n    });\n  } catch (e) {\n    console.log(e);\n    return { error: e };\n  }\n  console.log(await res);\n  //Sample res:{\"res\": \"true\"}\n  return { status: await res.status, res: await res.json() };\n}\n\nexport async function deleteCategory(request) {\n  const { email, categoryName } = request;\n  const endpoint = BASE_URL + `/deleteCategory`;\n\n  //fetch from server api\n  let res;\n  try {\n    res = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        categoryName: categoryName,\n      }),\n    });\n  } catch (e) {\n    console.log(e);\n    return { error: e };\n  }\n  console.log(await res);\n  //Sample res:{\"res\": \"true\"}\n  return { status: await res.status, res: await res.json() };\n}\n\nexport async function showCategory(request) {\n  const { email } = request;\n  const endpoint = BASE_URL + `/showCategories`;\n\n  //fetch from server api\n  let res;\n  try {\n    res = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n      }),\n    });\n  } catch (e) {\n    console.log(e);\n    return { error: e };\n  }\n  // console.log(await res);\n  //Sample A list of names of categories\n  return { status: await res.status, res: await res.json() };\n}\n\nexport async function showArtifacts(request) {\n  const { email, categoryName } = request;\n  const endpoint = BASE_URL + `/showArtifacts`;\n\n  //fetch from server api\n  let res;\n  try {\n    res = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        categoryName: categoryName,\n      }),\n    });\n  } catch (e) {\n    console.log(e);\n    return { error: e };\n  }\n  // console.log(await res);\n  //Sample A list of names of Artifacts\n  return { status: await res.status, res: await res.json() };\n}\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Upload,\n  Radio,\n  Input,\n  Select,\n  Divider,\n  message,\n  Button,\n} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport { upload } from \"../../containers/artifactApi\";\nimport { addCategory, showCategory } from \"../../containers/categoryApi\";\n\nimport Navbar from \"../../components/Navbar\";\n\nconst { Option } = Select;\nconst { Dragger } = Upload;\nlet index = 0;\n\nconst formItemLayout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 14,\n  },\n};\n\nlet file = [];\nlet baseURL = \"https://fatewhole.herokuapp.com/api/cache/upload\";\n\nconst props = {\n  name: \"file\",\n  multiple: true,\n  action: baseURL + `/${localStorage.getItem(\"email\")}`,\n  onChange(info) {\n    const { status } = info.file;\n    if (status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n    if (status === \"done\") {\n      file = info.fileList;\n      console.log(\"file:::\", file);\n\n      message.success(`${info.file.name} file uploaded successfully.`);\n    } else if (status === \"error\") {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n};\n\nexport default class Article extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      items: [],\n      name: \"\",\n      title: \"\",\n      description: \"\",\n      privacy: \"\",\n      loadings: [],\n      isUpdating: false,\n    };\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      value: \"\",\n      items: [],\n      name: \"\",\n      title: \"\",\n      description: \"\",\n      privacy: \"\",\n      loadings: [],\n      isUpdating: false,\n    });\n    console.log(\"clear artifact\");\n  }\n\n  componentDidMount() {\n    this.setState({\n      value: \"\",\n      items: [],\n      name: \"\",\n      title: \"\",\n      description: \"\",\n      privacy: \"\",\n      loadings: [],\n      isUpdating: false,\n    });\n    this.loadAllcates();\n    console.log(\"load artifact\");\n  }\n\n  loadAllcates = () => {\n    showCategory({ email: localStorage.getItem(\"email\") }).then((categories) =>\n      this.setState({\n        items: categories.res.categories,\n      })\n    );\n  };\n\n  onNameChange = (event) => {\n    this.setState({\n      name: event.target.value,\n      value: event.target.value,\n    });\n  };\n\n  onCategoryChange = (event) => {\n    this.setState({\n      name: event,\n    });\n    console.log(\"event\", event);\n    // console.log('email:::', props.action);\n  };\n\n  onTitleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  };\n\n  onDescriptionChange = (event) => {\n    this.setState({\n      description: event.target.value,\n    });\n  };\n\n  onPrivacyChange = (event) => {\n    this.setState({\n      privacy: event.target.value,\n    });\n  };\n\n  addItem = () => {\n    console.log(\"addItem\");\n    const { items, name } = this.state;\n    this.setState({\n      items: [...items, name || `New item ${index++}`],\n      name: \"\",\n      value: \"\",\n    });\n    addCategory({\n      email: localStorage.getItem(\"email\"),\n      categoryName: this.state.name,\n    });\n  };\n\n  uploadFiles = () => {\n    this.enterLoading(0);\n    var i;\n    var myFile = [];\n    for (i = 0; i < file.length; i++) {\n      myFile.push(file[i].name);\n    }\n\n    upload({\n      email: localStorage.getItem(\"email\"),\n      category: this.state.name,\n      title: this.state.title,\n      description: this.state.description,\n      attachment: myFile,\n      privacy: this.state.privacy,\n    }).then(\n      this.setState({\n        isUpdating: true,\n      })\n    );\n    console.log(myFile);\n    console.log(this.state.privacy);\n  };\n\n  enterLoading = (index) => {\n    this.setState(({ loadings }) => {\n      const newLoadings = [...loadings];\n      newLoadings[index] = true;\n\n      return {\n        loadings: newLoadings,\n      };\n    });\n    setTimeout(() => {\n      this.setState(({ loadings }) => {\n        const newLoadings = [...loadings];\n        newLoadings[index] = false;\n\n        return {\n          loadings: newLoadings,\n        };\n      });\n    }, 30000);\n    //window.location.replace('/admin/dashboard')\n  };\n\n  render() {\n    // const { items, title, description, value, privacy } = this.state;\n\n    const {\n      items,\n      title,\n      description,\n      value,\n      loadings,\n      isUpdating,\n    } = this.state;\n    if (isUpdating) {\n      window.location.replace(\"/admin/dashboard\");\n    }\n    if (props.action === baseURL + `/null`) {\n      window.location.replace(\"/admin/article\");\n    }\n    return (\n      <div className=\"pageContainer\">\n        <Navbar />\n\n        <Form name=\"validate_other\" {...formItemLayout}>\n          <Form.Item>\n            <div id=\"header\">\n              <br />\n              <br />\n              Upload Document\n            </div>\n          </Form.Item>\n\n          <Form.Item label=\"Title\">\n            <Input\n              placeholder=\"Enter Title\"\n              style={{ flex: \"auto\" }}\n              value={title}\n              onChange={this.onTitleChange}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"Description\">\n            <Input\n              placeholder=\"Enter Description\"\n              style={{ flex: \"auto\" }}\n              value={description}\n              onChange={this.onDescriptionChange}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"Select the category\">\n            <Select\n              onChange={this.onCategoryChange}\n              style={{ width: 240 }}\n              placeholder=\"add new category\"\n              dropdownRender={(menu) => (\n                <div>\n                  {menu}\n                  <Divider style={{ margin: \"4px 0\" }} />\n                  <div\n                    style={{ display: \"flex\", flexWrap: \"nowrap\", padding: 8 }}\n                  >\n                    <Input\n                      value={value}\n                      style={{ flex: \"auto\" }}\n                      onChange={this.onNameChange}\n                    />\n                    <button onClick={this.addItem}> Add item </button>\n                  </div>\n                </div>\n              )}\n            >\n              {items.map((item) => (\n                <Option key={item}>{item}</Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item name=\"radio-group\" label=\"Make Private\">\n            {/*<br />*/}\n            {/*<input type=\"radio\" name=\"is_teacher\" value=\"false\" onChange={this.handleChange} required /><label>No</label>*/}\n            {/*<input type=\"radio\" name=\"is_teacher\" value=\"true\" onChange={this.handleChange} required /><label>Yes</label><br />*/}\n            {/*<br />*/}\n            <Radio.Group>\n              <Radio value=\"public\" onChange={this.onPrivacyChange}>\n                Public\n              </Radio>\n              <Radio value=\"private\" onChange={this.onPrivacyChange}>\n                Private\n              </Radio>\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item label=\"Dragger\">\n            <Dragger {...props}>\n              <p className=\"ant-upload-drag-icon\">\n                <InboxOutlined />\n              </p>\n              <p className=\"ant-upload-text\">\n                Click or drag file to this area to upload\n              </p>\n              <p className=\"ant-upload-hint\">\n                Support for a single or bulk upload. Strictly prohibit from\n                uploading company data or other band files\n              </p>\n            </Dragger>\n          </Form.Item>\n\n          <Form.Item\n            wrapperCol={{\n              span: 12,\n              offset: 6,\n            }}\n          >\n            <p>\n              {\" \"}\n              Note: You can upload several files, but the size of each file must\n              be less than 1 MB.{\" \"}\n            </p>\n            <Button\n              value=\"default\"\n              loading={loadings[0]}\n              onClick={this.uploadFiles}\n            >\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n","const BASE_URL = \"https://fatewhole.herokuapp.com/api/account\";\n\n/*=========================================================================*/\n/*========================     Login/reg        ===========================*/\n/*=========================================================================*/\n/**\n * Verifies user login from server API\n */\nexport async function login(userDetails) {\n  const { email, password } = userDetails;\n  const endpoint = BASE_URL + `/login`;\n\n  let requestBody = new FormData();\n  requestBody.append(\"email\", email);\n  requestBody.append(\"password\", password);\n  if (!email) {\n    alert(\"please enter your email\"); //TODO: change to not alert\n    return;\n  }\n  if (!password) {\n    alert(\"please enter your password\"); //TODO\n    return;\n  }\n  //fetch from server api\n  let res;\n  try {\n    res = await fetch(endpoint, {\n      method: \"POST\",\n      // headers: {\n      //     'Access-Control-Allow-Origin': '*'\n      // },\n      body: requestBody,\n    });\n  } catch (e) {\n    console.log(e);\n    return { error: e };\n  }\n  return { status: res.status, user: await res.json() };\n}\n\n/**\n * Registers user from server API\n */\nexport async function register(userDetails) {\n  const {\n    first_name,\n    last_name,\n    email,\n    username,\n    password,\n    studentId,\n  } = userDetails;\n  const endpoint = BASE_URL + `/register`;\n  console.log(\"register\");\n\n  //fetch from server api\n  let res;\n  try {\n    res = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        firstname: first_name,\n        lastname: last_name,\n        studentId: studentId,\n        emailaddress: email,\n        username: username,\n        password: password,\n      }),\n    });\n  } catch (e) {\n    console.log(e);\n    return { error: e };\n  }\n  console.log(res);\n  return { status: res.status, res: await res.json() };\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { login } from \"../containers/accountApi\";\n\nlet clearURL = \"https://fatewhole.herokuapp.com/api/cache/clear/\";\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      wrongAttempt: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n\n    // call the API to verify user\n    const { status, user } = await login({\n      email: this.state.email,\n      password: this.state.password,\n    });\n\n    if (status === 200) {\n      this.setState({ wrongAttempt: false });\n\n      if (user.result) {\n        this.props.userStore.isLoggedIn = true;\n        this.props.userStore.email = this.state.email;\n        //this.props.userStore.user = user[0];\n        localStorage.setItem(\"email\", this.state.email);\n\n        const actionURL = clearURL + `${localStorage.getItem(\"email\")}`;\n        fetch(actionURL, {\n          method: \"GET\",\n        });\n\n        this.props.history.push(\"/admin/dashboard\");\n      } else {\n        this.setState({ wrongAttempt: true });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"titleHeader\">Log In</div>\n        <br />\n        <br />\n        <div className=\"formDisplay\">\n          <label>\n            <div className=\"subTitle2\">Email</div>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <br />\n          <br />\n          <label>\n            <div className=\"subTitle2\">Password</div>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <br />\n          <br />\n          <div className=\"subTitle\">\n            Don't have an account? <a href=\"/register\">Register</a>\n          </div>\n          <br />\n          <br />\n          {this.state.wrongAttempt ? (\n            <div className=\"formError\">\n              Please check your email and password\n            </div>\n          ) : null}\n          <input type=\"submit\" value=\"Log In\" />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport LoginForm from '../components/login';\n//import Navbar from '../components/Navbar';\n\n\nexport default function Loginpage(props) {\n    return (\n        <div className=\"pageContainer2\">\n            <br /><br /><br /><br /><br />\n\n            <div className=\"floatRight\">\n\n                <div className=\"loginForm\">\n                    <LoginForm userStore = {props.userStore}/>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { register } from \"../containers/accountApi\";\n\nclass RegForm extends React.Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            first_name: \"\",\n            last_name: \"\",\n            email: \"\",\n            studentId: \"\",\n            username: \"\",\n            password: \"\",\n            password_confirm: \"\",\n            success: true,\n            res: \"\"\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value,\n        });\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n\n        if(this.state.password !== this.state.password_confirm){\n            alert(\"Inconsistent password\");\n            return;\n        }\n        // call the API to verify user\n        const {status, res} = await register(\n            {\n                first_name: this.state.first_name,\n                last_name: this.state.last_name,\n                studentId: this.state.studentId,\n                email: this.state.email,\n                username: this.state.username,\n                password: this.state.password,\n                password_confirm: this.state.password_confirm\n            });\n      //alert(res.reason);\n        console.log(status);\n        console.log(res);\n        this.setState({success: status===200, res: res})\n        if(this.state.success) {\n            this.props.history.push('/login');\n        }\n\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"titleHeader\">Register</div>\n                <div className=\"subTitle\">Already have an account? <a href = \"/\">Log in</a></div>\n                <label>\n                    <div className=\"subTitle2\">First name</div>\n                    <input type=\"text\" name=\"first_name\" value={this.state.first_name} onChange={this.handleChange} required/>\n                </label>\n                <br />\n                <label>\n                    <div className=\"subTitle2\">Last name</div>\n                    <input type=\"text\" name=\"last_name\" value={this.state.last_name} onChange={this.handleChange} required/>\n                </label>\n                <br />\n                <label>\n                    <div className=\"subTitle2\">Student ID</div>\n                    <input type=\"text\" name=\"studentId\" value={this.state.studentId} onChange={this.handleChange} required/>\n                </label>\n                <br />\n                <label>\n                    <div className=\"subTitle2\">Email</div>\n                    <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} required/>\n                </label>\n                <br />\n                <label>\n                    <div className=\"subTitle2\">Username</div>\n                    <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} required/>\n                </label>\n                <br />\n                <label>\n                    <div className=\"subTitle2\">Password</div>\n                    <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required/>\n                </label>\n                <br />\n                <label>\n                    <div className=\"subTitle2\">Confirm your password</div>\n                    <input type=\"password\" name=\"password_confirm\" value={this.state.password_confirm} onChange={this.handleChange} required/>\n                </label>\n                <br /><br />\n                \n                {!this.state.success &&\n                <div className=\"formError\">\n                    {this.state.res}\n                </div>\n                }\n                <input type=\"submit\" value=\"Register\" />\n            </form>\n        );\n    }\n}\n\nexport default withRouter(RegForm);\n","import React from 'react';\nimport RegForm from '../components/register';\n\n\nexport default function RegPage() {\n    return (\n        <div className=\"pageContainer2\">\n            <div className=\"logo\"></div>\n            <div className=\"floatRight\">\n                <br /><br />\n                <div className=\"formDisplay\">\n                    <RegForm />\n                </div>\n            </div>\n            <div className=\"floatLeft\">\n                <br /><br /><br /><br />\n                <div className=\"formDisplay\"> </div>\n            </div>\n        </div>\n    );\n}","import React, {Component} from 'react';\nimport Navbar from \"../../components/Navbar\";\n\nexport default class DupLogin extends Component {\n    render() {\n        return (\n            <div className=\"pageContainer\">\n                <Navbar />\n                <div>\n                    Your have already login, please log out to switch the account.\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\r\nimport { Input } from 'antd';\r\n\r\nconst { Search } = Input;\r\n\r\nexport default function RegPage() {\r\n    return (\r\n        <div className=\"pageContainer\">\r\n        <Search placeholder=\"input search text\" onSearch={value => console.log(value)} enterButton />\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\n\n//import Navbar from './components/Navbar';\n\nimport Header from \"./components/header\";\nimport Dashboard from \"./containers/Dashboard/index\";\nimport Setting from \"./containers/Setting/index\";\nimport Artifact from \"./containers/Article/index\"\nimport LoginPage from \"./containers/loginPage\";\nimport RegPage from \"./containers/regPage\";\nimport DupLogin from \"./containers/DupLogin\";\nimport AdminPage from \"./containers/AdminPage\"\n\nimport { observer } from \"mobx-react\";\n\nimport {\n    BrowserRouter as Router,\n    Redirect,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\nconst App = observer(class App extends React.Component {\n\n    componentDidMount() {\n\n        let storedUsername = localStorage.getItem(\"email\");\n        //let storedUser = localStorage.getItem(\"user\");\n        if (storedUsername != null){\n            console.log(storedUsername);\n            //storedUser = JSON.parse(storedUser);\n            this.props.userStore.email = storedUsername; //TODO: REPLACE W JWT\n            this.props.userStore.isLoggedIn = true;\n            //this.props.userStore.user = storedUser;\n        }\n    }\n\n    //TODO: page not found\n    render() {\n        return (\n          <div className=\"App\">\n              <Header />\n              <Router>\n                  <Switch>\n                      <Route exact path=\"/\" render={(props) => (\n                          !(localStorage.getItem('email')===null) ? <Redirect to=\"/admin/dashboard\"/> : <Redirect to=\"/login\"/>\n\n                      )}\n                      />\n\n                      <Route exact path=\"/login\" render={(props) => (\n                          !(localStorage.getItem('email')===null) ? <Redirect to=\"/duplogin\"/> : <LoginPage userStore = {this.props.userStore}/>)}\n                      />\n\n                      <Route exact path=\"/register\" render={(props) => (\n                          !(localStorage.getItem('email')===null) ? <Redirect to=\"/login\"/> : <RegPage userStore = {this.props.userStore}/>)}\n                      />\n\n                      <Route exact path=\"/adminpage\" render={(props) => (\n                        !(localStorage.getItem('email')===null) ?\n                        <AdminPage isLoggedIn={this.props.userStore.isLoggedIn} email={this.props.userStore.email} userStore = {this.props.userStore}/>\n                        : <Redirect to=\"/login\"/> )}\n                      />\n\n                      <Route exact path=\"/admin\" render={(props) => (\n                          <Redirect to=\"/admin/dashboard\"/> )}\n                      />\n\n                      <Route exact path=\"/admin/dashboard\" render={(props) => (\n                          !(localStorage.getItem('email')===null) ?\n                          <Dashboard isLoggedIn={this.props.userStore.isLoggedIn} email={this.props.userStore.email} userStore = {this.props.userStore}/>\n                          : <Redirect to=\"/login\"/> )}\n                      />\n\n                      <Route exact path=\"/admin/category\" render={(props) => (\n                          !(localStorage.getItem('email')===null) ?\n                          <Setting isLoggedIn={this.props.userStore.isLoggedIn} email={this.props.userStore.email} userStore = {this.props.userStore}/>\n                          : <Redirect to=\"/login\"/> )}\n                      />\n\n                      <Route exact path=\"/admin/article\" render={(props) => (\n                          !(localStorage.getItem('email')===null) ?\n                          <Artifact isLoggedIn={this.props.userStore.isLoggedIn} email={this.props.userStore.email} userStore = {this.props.userStore}/>\n                          : <Redirect to=\"/login\"/> )}\n                      />\n\n                      <Route exact path=\"/duplogin\" render={(props) => (\n                          !(localStorage.getItem('email')===null) ?\n                          <DupLogin isLoggedIn={this.props.userStore.isLoggedIn} email={this.props.userStore.email} userStore = {this.props.userStore}/>\n                          :<Redirect to=\"/admin\"/> )}\n                      />\n\n                    <Redirect to = \"/404\" />\n                  </Switch>\n              </Router>\n          </div>\n        );\n    }\n})\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//stores the user login state\nimport {decorate, observable, computed, autorun } from \"mobx\";\n\nclass UserStore {\n    isLoggedIn = false;\n    email = \"\";\n    user=null;\n\n    constructor() {\n        autorun(() => console.log(this.report));\n    }\n\n    get report() {\n        if (this.isLoggedIn)\n            return \"Logged In!!!\";\n        return `Not logged In :(`;\n    }\n}\n\ndecorate(UserStore, {\n    isLoggedIn: observable,\n    email: observable,\n    user: observable,\n    report: computed\n})\n\nconst userStore = new UserStore();\n\nexport default userStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport userStore from './userData.js';\n\nReactDOM.render(\n  <React.Fragment>  \n    <App userStore = {userStore}/>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}